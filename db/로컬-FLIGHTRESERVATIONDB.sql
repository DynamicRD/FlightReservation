--항공사 테이블
CREATE TABLE AIRLINE(
    NO NUMBER(10),
    NAME VARCHAR2(30) NOT NULL,
    ENGLISH_NAME  VARCHAR2(30) NOT NULL,
    COUNTRY VARCHAR2(30) NOT NULL,
    GRADE VARCHAR2(10)
);
ALTER TABLE AIRLINE ADD CONSTRAINT AIRLINE_NO_PK PRIMARY KEY(NO);
ALTER TABLE AIRLINE ADD CONSTRAINT AIRLINE_NAME_UK UNIQUE(NAME);
ALTER TABLE AIRLINE ADD CONSTRAINT AIRLINE_ENGLISH_NAME_UK UNIQUE(ENGLISH_NAME);

--항공사 등급이름 출력 펑션
CREATE OR REPLACE FUNCTION AIRLINE_GRADE_FUNC(VNAME IN AIRLINE.NAME%TYPE)RETURN VARCHAR2
IS
    VNO NUMBER(10);
    VGRADE VARCHAR2(10);
    VMESSAGE VARCHAR2(200);
BEGIN
    SELECT NO,GRADE INTO VNO, VGRADE FROM AIRLINE WHERE NAME = VNAME;
    VMESSAGE := '항공사 번호는 '||VNO||'이고 항공사등급은 '||VGRADE||'입니다.';
    RETURN VMESSAGE;
END;
/

INSERT INTO AIRLINE VALUES(1, '대한항공','KOREAN AIR','대한민국','1등급');
DELETE FROM AIRLINE WHERE NO =1;
SELECT AIRLINE_GRADE_FUNC('카타르항공') FROM DUAL;

--항공사 백업 테이블
DROP TABLE AIRLINE_RECYCLEBIN;
CREATE TABLE AIRLINE_RECYCLEBIN(
    NUM NUMBER(10),
    NO NUMBER(10),
    NAME VARCHAR2(30) NOT NULL,
    ENGLISH_NAME  VARCHAR2(30) NOT NULL,
    COUNTRY VARCHAR2(30) NOT NULL,
    GRADE VARCHAR2(10)
);
--항공사 백업 시퀀스
DROP SEQUENCE AIRLINE_RECYCLEBIN_SEQ;
CREATE SEQUENCE AIRLINE_RECYCLEBIN_SEQ
START WITH 1
INCREMENT BY 1;

--항공사 백업 트리거
CREATE OR REPLACE TRIGGER AIRLINE_RECYCLEBIN_TRIGGER
    BEFORE DELETE ON AIRLINE
    FOR EACH ROW
BEGIN
    INSERT INTO AIRLINE_RECYCLEBIN VALUES(AIRLINE_RECYCLEBIN_SEQ.NEXTVAL,:OLD.NO, :OLD.NAME,:OLD.ENGLISH_NAME, :OLD.COUNTRY, :OLD.GRADE);
END;
/
-----------------------------------------------------------------------------------------------------
--고객 테이블
CREATE TABLE CUSTOMER(
    ID VARCHAR2(20),
    PASSWD VARCHAR2(20) NOT NULL,
    NAME VARCHAR2(20) NOT NULL,
    PASSPORT_NUMBER VARCHAR2(30) NOT NULL,
    MILEAGE NUMBER(10)
);


ALTER TABLE CUSTOMER ADD CONSTRAINTS CUSTOMER_ID_PK PRIMARY KEY(ID);
ALTER TABLE CUSTOMER ADD CONSTRAINTS CUSTOMER_PASSPORT_NUMBER_UK UNIQUE(PASSPORT_NUMBER);
ALTER TABLE CUSTOMER MODIFY MILEAGE NUMBER(10) DEFAULT 0;

--마일리지에 따라 고객 등급 출력 펑션
CREATE OR REPLACE FUNCTION CUSTOMER_GRADE_FUNC(VID IN CUSTOMER.ID%TYPE) RETURN VARCHAR2
IS
    VMESSAGE VARCHAR2(100);
    CUSTOMER_RT CUSTOMER%ROWTYPE;
BEGIN
    SELECT * INTO CUSTOMER_RT FROM CUSTOMER WHERE ID = VID;
    IF(CUSTOMER_RT.MILEAGE <= 1000) THEN
    VMESSAGE := CUSTOMER_RT.NAME||' 고객님은 실버등급입니다.';
    ELSIF(CUSTOMER_RT.MILEAGE <= 5000) THEN
    VMESSAGE := CUSTOMER_RT.NAME||' 고객님은 골드등급입니다.';
    ELSIF(CUSTOMER_RT.MILEAGE <= 10000) THEN
    VMESSAGE := CUSTOMER_RT.NAME||' 고객님은 플래티넘등급입니다.';
    ELSE
    VMESSAGE := CUSTOMER_RT.NAME||' 고객님은 다이아등급입니다.';
    END IF;
    RETURN VMESSAGE;
END;
/

--고객 백업 테이블
CREATE TABLE CUSTOMER_RECYCLEBIN(
    NUM NUMBER(3),
    ID VARCHAR2(20),
    PASSWD VARCHAR2(20),
    NAME VARCHAR2(20),
    PASSPORT_NUMBER VARCHAR2(30),
    MILEAGE NUMBER(10)
);

--고객 백업 시퀀스
DROP SEQUENCE CUSTOMER_RECYCLEBIN_SEQ;
CREATE SEQUENCE CUSTOMER_RECYCLEBIN_SEQ
START WITH 1
INCREMENT BY 1;

SELECT * FROM CUSTOMER;

--고객 백업 트리거
CREATE OR REPLACE TRIGGER CUSTOMER_RECYCLEBIN_TRIGGER
    BEFORE DELETE ON CUSTOMER
    FOR EACH ROW
BEGIN
    INSERT INTO CUSTOMER_RECYCLEBIN VALUES(CUSTOMER_RECYCLEBIN_SEQ.NEXTVAL, :OLD.ID,:OLD.PASSWD, :OLD.NAME, :OLD.PASSPORT_NUMBER, :OLD.MILEAGE);
END;
/
---------------------------------------------------------------------------------------------
--항공편 테이블
CREATE TABLE FLIGHT(
    NO NUMBER(10) ,
    A_NO NUMBER(10),
    DEPARTURE_DATE DATE NOT NULL,
    DEPARTURE_AIRPORT VARCHAR2(30) NOT NULL,
    ARRIVAL_AIRPORT VARCHAR2(30) NOT NULL,
    PRICE NUMBER(10) NOT NULL,
    SEAT VARCHAR2(30) NOT NULL
);
ALTER TABLE FLIGHT ADD CONSTRAINT FLIGHT_NO_PK PRIMARY KEY(NO);
ALTER TABLE FLIGHT ADD CONSTRAINT FLIGHT_A_NO_FK FOREIGN KEY(A_NO) REFERENCES AIRLINE(NO) ON DELETE SET NULL;
 
--선택한 항공사번호의 항공편의 가격을 10% 인상하는 프로시저
CREATE OR REPLACE PROCEDURE FLIGHT_PRICE_PROC(VANO IN FLIGHT.A_NO%TYPE)
IS
BEGIN
    UPDATE FLIGHT SET PRICE = PRICE * 1.1 WHERE A_NO = VANO;
END;
/
EXECUTE FLIGHT_PRICE_PROC(3);

--항공편 일련번호 시퀀스
CREATE SEQUENCE FLIGHT_NO_SEQ
START WITH 1
INCREMENT BY 1;

--항공편 백업 테이블
CREATE TABLE FLIGHT_RECYCLEBIN(
    NO NUMBER(10) ,
    A_NO NUMBER(10),
    DEPARTURE_DATE DATE,
    DEPARTURE_AIRPORT VARCHAR2(30),
    ARRIVAL_AIRPORT VARCHAR2(30),
    PRICE NUMBER(10),
    SEAT VARCHAR2(30)
);

--항공편 백업 시퀀스
CREATE SEQUENCE FLIGHT_RECYCLEBIN_SEQ
START WITH 1
INCREMENT BY 1;

--항공편 백업 트리거
CREATE OR REPLACE TRIGGER FLIGHT_RECYCLEBIN_TRIGGER
    BEFORE DELETE ON FLIGHT
    FOR EACH ROW
BEGIN
    INSERT INTO FLIGHT_RECYCLEBIN VALUES(FLIGHT_RECYCLEBIN_SEQ.NEXTVAL, :OLD.A_NO, :OLD.DEPARTURE_DATE, :OLD.DEPARTURE_AIRPORT, :OLD.ARRIVAL_AIRPORT, :OLD.PRICE, :OLD.SEAT);
END;
/
-------------------------------------------------------------------------
DROP TABLE RESERVATION;
--예약관리 테이블
CREATE TABLE RESERVATION(
    NO NUMBER(10),
    ID VARCHAR2(20),
    FLIGHT_NO NUMBER(10),
    QUANTITY NUMBER(3) NOT NULL
);

ALTER TABLE RESERVATION ADD CONSTRAINT RESERVATION_NO_PK PRIMARY KEY(NO);
ALTER TABLE RESERVATION ADD CONSTRAINT RESERVATION_CUSTOMER_ID_FK FOREIGN KEY(ID) REFERENCES CUSTOMER(ID) ON DELETE SET NULL;
ALTER TABLE RESERVATION ADD CONSTRAINT RESERVATION_FLIGHT_FLIGHT_NO_FK FOREIGN KEY(FLIGHT_NO) REFERENCES FLIGHT(NO) ON DELETE SET NULL;

DROP TABLE RESERVATION_RECYCLEBIN;
--예약관리 백업 테이블
CREATE TABLE RESERVATION_RECYCLEBIN(
    NUM NUMBER(3),
    NO NUMBER(10),
    ID VARCHAR2(20),
    FLIGHT_NO NUMBER(10),
    QUANTITY NUMBER(3)
);
--예약관리 일련번호 시퀀스
CREATE SEQUENCE RESERVATION_NO_SEQ
START WITH 1
INCREMENT BY 1;


DESC RESERVATION_RECYCLEBIN;
--예약관리 백업 시퀀스
CREATE SEQUENCE RESERVATION_RECYCLEBIN_SEQ
START WITH 1
INCREMENT BY 1;

--예약관리 백업 트리거
CREATE OR REPLACE TRIGGER RESERVATION_RECYCLEBIN_TRIGGER
    BEFORE DELETE ON RESERVATION
    FOR EACH ROW
BEGIN
    INSERT INTO RESERVATION_RECYCLEBIN VALUES(RESERVATION_RECYCLEBIN_SEQ.NEXTVAL, :OLD.NO,:OLD.ID, :OLD.FLIGHT_NO, :OLD.QUANTITY);
END;
/

--예약관리 마일리지 증가 트리거
CREATE OR REPLACE TRIGGER UPDATE_CUSTOMER_MILEAGE_TRIGGER
AFTER INSERT OR UPDATE OF QUANTITY ON RESERVATION
FOR EACH ROW
WHEN (NEW.QUANTITY > NVL(OLD.QUANTITY, 0))
BEGIN
    UPDATE CUSTOMER
    SET MILEAGE = MILEAGE + (:NEW.QUANTITY - NVL(:OLD.QUANTITY,0)) * 100
    WHERE ID = :NEW.ID;
END;
/
----------------------------------------
select * from airline;
select * from customer;
select * from flight;
select * from reservation;

Insert into airline values (6911,'대한항공','Korean Air','한국','5');
Insert into airline values (6910,'아시아나','Asiana Airlines','한국','5');
Insert into airline values (6877,'일본항공','Japan AirLines','일본','5');
Insert into airline values (6813,'중국국제항공','Air China','중국','3');
Insert into airline values (6908,'진에어','Jin Air','한국','3');

Insert into customer values ('chars0123','asdf1234@','철수','M135A8751',100);
Insert into customer values ('yuzu333','qwer4321!','유주','M423A4534',0);
Insert into customer values ('hesung234','hehe234@','희성','M234A2345',200);
Insert into customer values ('yongzu22','dudwn155@','영주','M456A2341',300);
Insert into customer values ('chagsu9','ckdtn22@@','창수','M624A2352',1200);

Insert into flight values (flight_no_seq.nextval,6911,to_date('24/12/01','RR/MM/DD'),'인천공항','제주공항',150000,'이코노미');
Insert into flight values (flight_no_seq.nextval,6911,to_date('24/11/21','RR/MM/DD'),'김포공항','도쿄공항',300000,'이코노미');
Insert into flight values (flight_no_seq.nextval,6908,to_date('24/10/30','RR/MM/DD'),'인천공항','제주공항',100000,'이코노미');
Insert into flight values (flight_no_seq.nextval,6908,to_date('24/11/12','RR/MM/DD'),'대구공항','인천공항',120000,'이코노미');
Insert into flight values (flight_no_seq.nextval,6910,to_date('24/10/23','RR/MM/DD'),'김포공항','제주공항',400000,'비즈니스');

Insert into reservation values (reservation_no_seq,'chagsu9',1,2);
Insert into reservation values (reservation_no_seq,'chagsu9',2,10);
Insert into reservation values (reservation_no_seq,'chars0123',3,1);
Insert into reservation values (reservation_no_seq,'hesung234',4,2);
Insert into reservation values (reservation_no_seq,'yongzu22',5,3);